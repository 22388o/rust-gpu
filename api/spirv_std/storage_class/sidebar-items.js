initSidebarItems({"struct":[["AtomicCounter","Atomic counter-specific memory."],["CallableDataKHR","Used for storing arbitrary data associated with a ray to pass to callables. (Requires `SPV_KHR_ray_tracing` extension)"],["CrossWorkgroup","OpenCL global memory."],["Function","Regular function memory."],["Generic","For generic pointers, which overload the [`Function`], [`Workgroup`], and [`CrossWorkgroup`] Storage Classes."],["HitAttributeKHR","Used for storing attributes of geometry intersected by a ray. (Requires `SPV_KHR_ray_tracing` extension)"],["Image","Image memory."],["IncomingCallableDataKHR","Used for storing arbitrary data from parent sent to current callable stage invoked from an `executeCallable` call. (Requires `SPV_KHR_ray_tracing` extension)"],["IncomingRayPayloadKHR","Used for storing attributes of geometry intersected by a ray. (Requires `SPV_KHR_ray_tracing` extension)"],["Input","Input from pipeline."],["Output","Output to pipeline."],["PhysicalStorageBuffer","Graphics storage buffers using physical addressing. (SPIR-V 1.5+)"],["Private","Regular global memory."],["PushConstant","Push-constant memory."],["RayPayloadKHR","Used for storing payload data associated with a ray. (Requires `SPV_KHR_ray_tracing` extension)"],["ShaderRecordBufferKHR","Used for storing data in shader record associated with each unique shader in ray_tracing pipeline. (Requires `SPV_KHR_ray_tracing` extension)"],["StorageBuffer","Graphics storage buffers (buffer blocks)."],["Uniform","Graphics uniform blocks and buffer blocks."],["UniformConstant","Graphics uniform memory. OpenCL constant memory."],["Workgroup","The OpenGL \"shared\" storage qualifier. OpenCL local memory."]]});