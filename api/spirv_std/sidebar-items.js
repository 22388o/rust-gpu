initSidebarItems({"fn":[["demote_to_helper_invocation","Calls the `OpDemoteToHelperInvocationEXT` instruction, which corresponds to discard() in HLSL"],["discard","Calls the `OpKill` instruction, which corresponds to discard() in GLSL"],["memcmp","libcore requires a few external symbols to be defined: https://github.com/rust-lang/rust/blob/c2bc344eb23d8c1d18e803b3f1e631cf99926fbb/library/core/src/lib.rs#L23-L27 TODO: This is copied from `compiler_builtins/mem.rs`. Can we use that one instead? The note in the above link says “[the symbols] can also be provided by the compiler-builtins crate”. The memcpy in `compiler_builtins` is behind a “mem” feature flag - can we enable that somehow? https://github.com/rust-lang/compiler-builtins/blob/eff506cd49b637f1ab5931625a33cef7e91fbbf6/src/mem.rs#L12-L13"]],"mod":[["arch","SPIR-V Instrinics"],["derivative","The [`Derivative`] trait for getting derivatives and handling derivative operations in SPIR-V."],["integer",""],["scalar",""],["storage_class","Storage Classes"],["vector",""]],"struct":[["Image2d",""],["Image2dArray",""],["SampledImage",""],["Sampler",""],["StorageImage2d",""]]});